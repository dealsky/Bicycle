<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bicycle.dao.ModuleBicycleMapper" >
  <resultMap id="BaseResultMap" type="com.bicycle.dao.entity.ModuleBicycle" >
    <id column="BicId" property="bicid" jdbcType="BIGINT" />
    <result column="BicNumber" property="bicnumber" jdbcType="BIGINT" />
    <result column="BicType" property="bictype" jdbcType="VARCHAR" />
    <result column="BicRentPrice" property="bicrentprice" jdbcType="REAL" />
    <result column="BicBuytime" property="bicbuytime" jdbcType="DATE" />
    <result column="BicBorrowed" property="bicborrowed" jdbcType="INTEGER" />
    <result column="BicBorrowedCount" property="bicborrowedcount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    BicId, BicNumber, BicType, BicRentPrice, BicBuytime, BicBorrowed, BicBorrowedCount
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bicycle.dao.entity.ModuleBicycleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from module_bicycle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from module_bicycle
    where BicId = #{bicid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from module_bicycle
    where BicId = #{bicid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.bicycle.dao.entity.ModuleBicycleExample" >
    delete from module_bicycle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bicycle.dao.entity.ModuleBicycle" useGeneratedKeys="true" keyProperty="bicid">
    insert into module_bicycle (BicId, BicNumber, BicType, 
      BicRentPrice, BicBuytime, BicBorrowed, 
      BicBorrowedCount)
    values (#{bicid,jdbcType=BIGINT}, #{bicnumber,jdbcType=BIGINT}, #{bictype,jdbcType=VARCHAR}, 
      #{bicrentprice,jdbcType=REAL}, #{bicbuytime,jdbcType=DATE}, #{bicborrowed,jdbcType=INTEGER}, 
      #{bicborrowedcount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bicycle.dao.entity.ModuleBicycle" >
    insert into module_bicycle
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bicid != null" >
        BicId,
      </if>
      <if test="bicnumber != null" >
        BicNumber,
      </if>
      <if test="bictype != null" >
        BicType,
      </if>
      <if test="bicrentprice != null" >
        BicRentPrice,
      </if>
      <if test="bicbuytime != null" >
        BicBuytime,
      </if>
      <if test="bicborrowed != null" >
        BicBorrowed,
      </if>
      <if test="bicborrowedcount != null" >
        BicBorrowedCount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bicid != null" >
        #{bicid,jdbcType=BIGINT},
      </if>
      <if test="bicnumber != null" >
        #{bicnumber,jdbcType=BIGINT},
      </if>
      <if test="bictype != null" >
        #{bictype,jdbcType=VARCHAR},
      </if>
      <if test="bicrentprice != null" >
        #{bicrentprice,jdbcType=REAL},
      </if>
      <if test="bicbuytime != null" >
        #{bicbuytime,jdbcType=DATE},
      </if>
      <if test="bicborrowed != null" >
        #{bicborrowed,jdbcType=INTEGER},
      </if>
      <if test="bicborrowedcount != null" >
        #{bicborrowedcount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bicycle.dao.entity.ModuleBicycleExample" resultType="java.lang.Integer" >
    select count(*) from module_bicycle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update module_bicycle
    <set >
      <if test="record.bicid != null" >
        BicId = #{record.bicid,jdbcType=BIGINT},
      </if>
      <if test="record.bicnumber != null" >
        BicNumber = #{record.bicnumber,jdbcType=BIGINT},
      </if>
      <if test="record.bictype != null" >
        BicType = #{record.bictype,jdbcType=VARCHAR},
      </if>
      <if test="record.bicrentprice != null" >
        BicRentPrice = #{record.bicrentprice,jdbcType=REAL},
      </if>
      <if test="record.bicbuytime != null" >
        BicBuytime = #{record.bicbuytime,jdbcType=DATE},
      </if>
      <if test="record.bicborrowed != null" >
        BicBorrowed = #{record.bicborrowed,jdbcType=INTEGER},
      </if>
      <if test="record.bicborrowedcount != null" >
        BicBorrowedCount = #{record.bicborrowedcount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update module_bicycle
    set BicId = #{record.bicid,jdbcType=BIGINT},
      BicNumber = #{record.bicnumber,jdbcType=BIGINT},
      BicType = #{record.bictype,jdbcType=VARCHAR},
      BicRentPrice = #{record.bicrentprice,jdbcType=REAL},
      BicBuytime = #{record.bicbuytime,jdbcType=DATE},
      BicBorrowed = #{record.bicborrowed,jdbcType=INTEGER},
      BicBorrowedCount = #{record.bicborrowedcount,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bicycle.dao.entity.ModuleBicycle" >
    update module_bicycle
    <set >
      <if test="bicnumber != null" >
        BicNumber = #{bicnumber,jdbcType=BIGINT},
      </if>
      <if test="bictype != null" >
        BicType = #{bictype,jdbcType=VARCHAR},
      </if>
      <if test="bicrentprice != null" >
        BicRentPrice = #{bicrentprice,jdbcType=REAL},
      </if>
      <if test="bicbuytime != null" >
        BicBuytime = #{bicbuytime,jdbcType=DATE},
      </if>
      <if test="bicborrowed != null" >
        BicBorrowed = #{bicborrowed,jdbcType=INTEGER},
      </if>
      <if test="bicborrowedcount != null" >
        BicBorrowedCount = #{bicborrowedcount,jdbcType=INTEGER},
      </if>
    </set>
    where BicId = #{bicid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bicycle.dao.entity.ModuleBicycle" >
    update module_bicycle
    set BicNumber = #{bicnumber,jdbcType=BIGINT},
      BicType = #{bictype,jdbcType=VARCHAR},
      BicRentPrice = #{bicrentprice,jdbcType=REAL},
      BicBuytime = #{bicbuytime,jdbcType=DATE},
      BicBorrowed = #{bicborrowed,jdbcType=INTEGER},
      BicBorrowedCount = #{bicborrowedcount,jdbcType=INTEGER}
    where BicId = #{bicid,jdbcType=BIGINT}
  </update>
</mapper>